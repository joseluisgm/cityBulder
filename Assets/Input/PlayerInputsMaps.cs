//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/PlayerInputsMaps.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputsMaps: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputsMaps()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputsMaps"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""37b03a08-50f3-42ce-a1ef-b59171c7ba1c"",
            ""actions"": [
                {
                    ""name"": ""Camera_Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""521c472a-c3f0-4d5d-84c2-a54c2db8f9e2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera_Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""add7100b-c2c3-4a0c-a084-58dbf670d31b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera_Rotate_Togle"",
                    ""type"": ""Button"",
                    ""id"": ""1ad52bf3-9eb5-47bf-8dc9-a033614fce6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera_Move"",
                    ""type"": ""Value"",
                    ""id"": ""b8f8bec4-5afb-4be8-bcdb-8aeaa6e08fb1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cancel_building"",
                    ""type"": ""Button"",
                    ""id"": ""00448f39-7324-450d-b1cc-65371f0bdc61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel_bulldozer"",
                    ""type"": ""Button"",
                    ""id"": ""e87fe5cd-bb69-4679-b6a0-b4e02bb7fd55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interacte_Building"",
                    ""type"": ""Button"",
                    ""id"": ""278a7b4c-8eec-4be2-9b4f-9937956c0187"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate_Building"",
                    ""type"": ""Button"",
                    ""id"": ""8721bd2d-1f55-49a1-91c5-73b4d7ec1bdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""92cf3d72-f5fd-4f0e-98bb-7c40500894dc"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2,InvertVector2(invertX=false)"",
                    ""groups"": """",
                    ""action"": ""Camera_Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4e19ed6-cbd1-47ba-abb8-c34b869d1b56"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21076be5-e94e-4ab7-bfb0-f6a34072705e"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Rotate_Togle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASP"",
                    ""id"": ""70e62083-5803-4633-adf2-4e5e01c0a561"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""868cd7c6-7c9e-4cb3-9233-b85314a22d43"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cc7018f4-bed3-41be-92e1-50216e95802d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0ef88b9c-773f-4764-8b62-940adf327182"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77f15c27-1da8-4ee5-9403-e550615a0d3c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""0b99ee8c-2a10-4b89-90e3-3345b3c0cc15"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""32813d93-6331-4c6e-9af4-b8cc0cd18708"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6660e774-4252-48aa-a87e-aa181c0f47cf"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6ac3c5cf-f979-4035-832a-415da0adbc99"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a99215f5-d7fe-482f-896e-067f103f2538"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""833d1d10-759e-4933-ab43-edd01ffb4d2e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel_building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6ac6076-c7cd-4d61-9723-da066eb06762"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel_bulldozer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""632fbf76-87c1-44d0-8341-01af2b7c5d7e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interacte_Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c382643-22f4-47a0-b5eb-aaad6d55b2c3"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate_Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Camera_Zoom = m_Player.FindAction("Camera_Zoom", throwIfNotFound: true);
        m_Player_Camera_Rotate = m_Player.FindAction("Camera_Rotate", throwIfNotFound: true);
        m_Player_Camera_Rotate_Togle = m_Player.FindAction("Camera_Rotate_Togle", throwIfNotFound: true);
        m_Player_Camera_Move = m_Player.FindAction("Camera_Move", throwIfNotFound: true);
        m_Player_Cancel_building = m_Player.FindAction("Cancel_building", throwIfNotFound: true);
        m_Player_Cancel_bulldozer = m_Player.FindAction("Cancel_bulldozer", throwIfNotFound: true);
        m_Player_Interacte_Building = m_Player.FindAction("Interacte_Building", throwIfNotFound: true);
        m_Player_Rotate_Building = m_Player.FindAction("Rotate_Building", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Camera_Zoom;
    private readonly InputAction m_Player_Camera_Rotate;
    private readonly InputAction m_Player_Camera_Rotate_Togle;
    private readonly InputAction m_Player_Camera_Move;
    private readonly InputAction m_Player_Cancel_building;
    private readonly InputAction m_Player_Cancel_bulldozer;
    private readonly InputAction m_Player_Interacte_Building;
    private readonly InputAction m_Player_Rotate_Building;
    public struct PlayerActions
    {
        private @PlayerInputsMaps m_Wrapper;
        public PlayerActions(@PlayerInputsMaps wrapper) { m_Wrapper = wrapper; }
        public InputAction @Camera_Zoom => m_Wrapper.m_Player_Camera_Zoom;
        public InputAction @Camera_Rotate => m_Wrapper.m_Player_Camera_Rotate;
        public InputAction @Camera_Rotate_Togle => m_Wrapper.m_Player_Camera_Rotate_Togle;
        public InputAction @Camera_Move => m_Wrapper.m_Player_Camera_Move;
        public InputAction @Cancel_building => m_Wrapper.m_Player_Cancel_building;
        public InputAction @Cancel_bulldozer => m_Wrapper.m_Player_Cancel_bulldozer;
        public InputAction @Interacte_Building => m_Wrapper.m_Player_Interacte_Building;
        public InputAction @Rotate_Building => m_Wrapper.m_Player_Rotate_Building;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Camera_Zoom.started += instance.OnCamera_Zoom;
            @Camera_Zoom.performed += instance.OnCamera_Zoom;
            @Camera_Zoom.canceled += instance.OnCamera_Zoom;
            @Camera_Rotate.started += instance.OnCamera_Rotate;
            @Camera_Rotate.performed += instance.OnCamera_Rotate;
            @Camera_Rotate.canceled += instance.OnCamera_Rotate;
            @Camera_Rotate_Togle.started += instance.OnCamera_Rotate_Togle;
            @Camera_Rotate_Togle.performed += instance.OnCamera_Rotate_Togle;
            @Camera_Rotate_Togle.canceled += instance.OnCamera_Rotate_Togle;
            @Camera_Move.started += instance.OnCamera_Move;
            @Camera_Move.performed += instance.OnCamera_Move;
            @Camera_Move.canceled += instance.OnCamera_Move;
            @Cancel_building.started += instance.OnCancel_building;
            @Cancel_building.performed += instance.OnCancel_building;
            @Cancel_building.canceled += instance.OnCancel_building;
            @Cancel_bulldozer.started += instance.OnCancel_bulldozer;
            @Cancel_bulldozer.performed += instance.OnCancel_bulldozer;
            @Cancel_bulldozer.canceled += instance.OnCancel_bulldozer;
            @Interacte_Building.started += instance.OnInteracte_Building;
            @Interacte_Building.performed += instance.OnInteracte_Building;
            @Interacte_Building.canceled += instance.OnInteracte_Building;
            @Rotate_Building.started += instance.OnRotate_Building;
            @Rotate_Building.performed += instance.OnRotate_Building;
            @Rotate_Building.canceled += instance.OnRotate_Building;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Camera_Zoom.started -= instance.OnCamera_Zoom;
            @Camera_Zoom.performed -= instance.OnCamera_Zoom;
            @Camera_Zoom.canceled -= instance.OnCamera_Zoom;
            @Camera_Rotate.started -= instance.OnCamera_Rotate;
            @Camera_Rotate.performed -= instance.OnCamera_Rotate;
            @Camera_Rotate.canceled -= instance.OnCamera_Rotate;
            @Camera_Rotate_Togle.started -= instance.OnCamera_Rotate_Togle;
            @Camera_Rotate_Togle.performed -= instance.OnCamera_Rotate_Togle;
            @Camera_Rotate_Togle.canceled -= instance.OnCamera_Rotate_Togle;
            @Camera_Move.started -= instance.OnCamera_Move;
            @Camera_Move.performed -= instance.OnCamera_Move;
            @Camera_Move.canceled -= instance.OnCamera_Move;
            @Cancel_building.started -= instance.OnCancel_building;
            @Cancel_building.performed -= instance.OnCancel_building;
            @Cancel_building.canceled -= instance.OnCancel_building;
            @Cancel_bulldozer.started -= instance.OnCancel_bulldozer;
            @Cancel_bulldozer.performed -= instance.OnCancel_bulldozer;
            @Cancel_bulldozer.canceled -= instance.OnCancel_bulldozer;
            @Interacte_Building.started -= instance.OnInteracte_Building;
            @Interacte_Building.performed -= instance.OnInteracte_Building;
            @Interacte_Building.canceled -= instance.OnInteracte_Building;
            @Rotate_Building.started -= instance.OnRotate_Building;
            @Rotate_Building.performed -= instance.OnRotate_Building;
            @Rotate_Building.canceled -= instance.OnRotate_Building;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnCamera_Zoom(InputAction.CallbackContext context);
        void OnCamera_Rotate(InputAction.CallbackContext context);
        void OnCamera_Rotate_Togle(InputAction.CallbackContext context);
        void OnCamera_Move(InputAction.CallbackContext context);
        void OnCancel_building(InputAction.CallbackContext context);
        void OnCancel_bulldozer(InputAction.CallbackContext context);
        void OnInteracte_Building(InputAction.CallbackContext context);
        void OnRotate_Building(InputAction.CallbackContext context);
    }
}
